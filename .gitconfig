# This is Git's per-user configuration file.
[user]
# Please adapt and uncomment the following lines:
    name = Derek Wiers
    email = dtwiers08@gmail.com
[core]
    excludesfile = /Users/derekwiers/.gitignore_global
    pager = less -x1,5
[filter "lfs"]
    clean = git-lfs clean -- %f
    smudge = git-lfs smudge -- %f
    process = git-lfs filter-process
    required = true
[diff]
    tool = vimdiff
    wsErrorHighlight = old,new,context
    indentHeuristic = true
    algorithm = histogram
[merge]
    tool = smerge
    conflictstyle = diff3
[gpg]
    program = gpg
[alias]
    # view similar to tig
    tree = log --all --graph --decorate --oneline --simplify-by-decoration

    # super clean.  Git reset but clears out everything that isn't tracked,
    # modified, or ignored.
    cleaner = "!git clean -f; git add .; git reset --hard"

    # push -u origin <branch_name>
    pu = "!git rev-parse --abbrev-ref HEAD | xargs git push -u origin"

    # git pu + hub pull-request
    pr = "!git rev-parse --abbrev-ref HEAD | xargs git push -u origin && hub pull-request -b ${1:-master} -m $(git rev-parse --abbrev-ref HEAD)"

    # aggressive pruning relative to branch $1
    trim = "!git checkout $1 && git pull && git remote prune origin && git branch --merged | grep -v '^\\*' | grep -v master | xargs git branch -d"

    # long list aliases (with definitions)
    lla = "!git config -l | grep alias | cut -c 7-"

    # list aliases
    la = !git config -l | grep alias | cut -c 7- | awk -F "=" '{print $1}'

    # merge branch $1 on top of $2 without committing to see what it looks like
    test = !git checkout $2 && git pull && git merge --no-ff --no-commit $1 && git status

    # show commit hash
    hash = rev-parse --verify HEAD
    shash = rev-parse --verify --short HEAD
[color "diff"]
    whitespace = red reverse
[pull]
	rebase = false
[init]
	defaultBranch = main
